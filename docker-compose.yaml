# version: "3.8"

networks:
  esteticar_net:
    driver: bridge

services:
  # cloudflared:
  #   image: cloudflare/cloudflared:latest
  #   command: tunnel --no-autoupdate run --token eyJhIjoiODBhNTkxMDQxZTBjMzg2ZjgxNzA5OTFkYzhlODNiMGEiLCJ0IjoiMTJlYTlkN2ItZmZkZC00NmM2LWE0NTgtNTg2NjFhOGRmM2RjIiwicyI6IllXTTFaR05pWm1RdFptWmlZeTAwTmpKakxXSmtNR0l0TldWa1ltVTBOalF6TXpjMiJ9
  #   restart: unless-stopped
  #   network_mode: host

  frontend_a:
    build: .
    container_name: esteticar-frontend-a
    volumes:
      - .:/usr/share/app
    ports:
      - 3020:3000
    restart: always
    networks:
      - esteticar_net
    environment:
      - PASS=123456

  # frontend_b:
  #   build: .
  #   container_name: esteticar-frontend-b
  #   volumes:
  #     - .:/usr/share/app
  #   ports:
  #     - 3021:3000
  #   restart: always
  #   networks:
  #     - esteticar_net

  # adminer:
  #   image: adminer
  #   container_name: esteticar-adminer
  #   restart: always
  #   ports:
  #     - 8100:8080
  #   networks:
  #     - esteticar_net

  # cloudbeaver:
  #   image: dbeaver/cloudbeaver:latest
  #   container_name: cloudbeaver
  #   restart: unless-stopped
  #   ports:
  #     - "8998:8978"
  #   # volumes:
  #   #   - cloudbeaver-data:/opt/cloudbeaver/workspace
  #   # environment:
  #   #   - CB_ADMIN_NAME=admin
  #   #   - CB_ADMIN_PASSWORD=Admin123
  #   networks:
  #     - esteticar_net
  # postgres:
  #   image: postgres
  #   container_name: postgres
  #   ports:
  #     - 5453:5432
  #   restart: always
  #   networks:
  #     - esteticar_net
  #   # volumes:
  #   #     - ./data/postgresql:var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_USER=esteticar
  #     - POSTGRES_PASSWORD=esteticar #pgpass
  #     # - PGDATA=/var/lib/postgresql/data/pgdata

  #   redis-stack:
  #     image: redis/redis-stack:latest
  #     container_name: esteticar-redis-stack
  #     ports:
  #       - "6399:6379"
  #       - "8031:8001"
  #     networks:
  #       - esteticar_net
  #     # environment:
  #     #   - REDIS_PASSWORD=yourpassword
  #     # volumes:
  #     #   - redis_data:/data
  #   # volumes:
  #   #   redis_data:

  #   jenkins:
  #     image: jenkins/jenkins:lts
  #     container_name: jenkins_1
  #     ports:
  #       - "8086:8080" # Porta de acesso ao Jenkins
  #       - "50001:50000" # Porta para conexão de agentes Jenkins
  #     volumes:
  #       - jenkins_home:/var/jenkins_home # Volume para persistência dos dados do Jenkins
  #       - /var/run/docker.sock:/var/run/docker.sock # Permite que o Jenkins controle o Docker do host
  #     # environment:
  #     #   - JAVA_OPTS=-Djenkins.install.runSetupWizard=false # Pula o assistente de configuração inicial
  #     restart: always
  #     # network_mode: host
  # volumes:
  #   jenkins_home:

  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   container_name: jaeger
  #   ports:
  #     - "16686:16686" # UI do Jaeger
  #     # - "4317:4317" # OTLP gRPC
  #     # - "4318:4318" # OTLP HTTP
  #     - "5778:5778" # Configuração remota do agente
  #     - "6831:6831/udp" # Thrift Compact
  #     - "6832:6832/udp" # Thrift Binary
  #     - "9411:9411" # Zipkin
  #   restart: unless-stopped
  #   networks:
  #     - esteticar_net

  # otel-collector:
  #   image: otel/opentelemetry-collector:latest
  #   container_name: otel-collector
  #   command: ["--config=/etc/otel-collector-config.yml"]
  #   volumes:
  #     - ./otel-collector-config.yml:/etc/otel-collector-config.yml
  #   ports:
  #     - "1888:1888" # pprof extension
  #     - "13133:13133" # health_check extension
  #     - "4317:4317" # OTLP gRPC receiver
  #     - "4318:4318" # http gRPC receiver
  #     - "55679:55679" # zpages extension
  #   depends_on:
  #     - jaeger
  #   links:
  #     - jaeger
  #   networks:
  #     - esteticar_net
