version: '3.8'

services:
    # for development use
    app:
        build: .
        container_name: esteticar-app
        volumes:
            - .:/usr/share/app
        ports:
            - 3000:3000
        restart: always
        network_mode: host

    # elasticsearch:
    #     image: elasticsearch
    #     environment:
    #         - bootstrap.memory_lock=true
    #         - cluster.name=docker-cluster
    #         - cluster.routing.allocation.disk.threshold_enabled=false
    #         - discovery.type=single-node
    #         - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
    #     ulimits:
    #     memlock:
    #         hard: -1
    #         soft: -1
    #     volumes:
    #         - esdata:/usr/share/elasticsearch/data
    #     ports:
    #         - 9200:9200
    #     networks:
    #         - elastic
    #     healthcheck:
    #     interval: 20s
    #     retries: 10
    #     test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

    # kibana:
    #     image: kibana
    #     depends_on:
        #     elasticsearch:
        #         condition: service_healthy
    #     environment:
        #     ELASTICSEARCH_URL: http://elasticsearch:9200
        #     ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    #     ports:
    #         - 5601:5601
    #     networks:
    #         - elastic
    #     healthcheck:
    #     interval: 10s
    #     retries: 20
    #     test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

    # apm_server:
    #     image: elastic/apm-server
    #     container_name: apm_server
    #     ports:
    #         - 6379:6379
    #     restart: always
    #     network_mode: host

    # datadog_agent
    #     image: datadog/agent
    #     container_name: apm_server
    #     ports:
    #         - 6379:6379
    #     restart: always
    #     network_mode: host

    # redis:
    #     image: redis:latest
    #     container_name: redis
    #     ports:
    #         - 6379:6379
    #     restart: always
    #     network_mode: host

    # redis_insight:
    #     image: redis/redisinsight:latest
    #     container_name: redis_insight
    #     restart: always
    #     ports:
    #         - 5540:5540
   
    # adminer:
    #     image: adminer
    #     container_name: adminer
    #     restart: always
    #     ports:
    #         - 8080:8080
    #     network_mode: host

    # postgresql:
    #     image: postgres
    #     container_name: postgresql
    #     ports:
    #         - 5432:5432
    #     restart: always
    #     network_mode: host
    #     # volumes:
    #     #     - ./storage/postgresql:var/lib/postgresql/data
    #     environment:
    #         - POSTGRES_USER=psqlpass
    #         - POSTGRES_PASSWORD=psqlpass #pgpass
    #         # - PGDATA=/var/lib/postgresql/data/pgdata
    #     # volumes:
    #     #     - /home/felipe/Documents/esteticar/data:var/lib/postgresql/data
           
           
    



    
